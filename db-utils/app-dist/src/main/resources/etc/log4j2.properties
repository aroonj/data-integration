## Log4j2 
## consult http://howtodoinjava.com/log4j2/log4j-2-properties-file-configuration-example/

status = error
name = PropertiesConfig

#Make sure to change log file path as per your need
property.filename = ${sys:log.dir}/debug-env.log

appenders = console, rolling

appender.console.type = Console
appender.console.name = out
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${filename}
#appender.rolling.filePattern = debug-backup-%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
appender.rolling.filePattern = debug-backup-%d{yy-MM-dd-HH}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 5
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 20
 
#loggers = rolling, timercopy
#Make sure to change the package structure as per your application
#logger.rolling.name = com.servnize
#logger.rolling.level = debug
#logger.rolling.additivity = false
#logger.rolling.appenderRefs = rolling
#logger.rolling.appenderRef.rolling.ref = RollingFile

#logger used for Camel timercopy route
#logger.timercopy.name = timercopy
#logger.timercopy.level = debug
#logger.timercopy.additivity = false
#logger.timercopy.appenderRefs = rolling, console
## send log to file
#logger.timercopy.appenderRef.rolling.ref = RollingFile
## send log to console
#logger.timercopy.appenderRef.console.ref = out


rootLogger.level = info
rootLogger.appenderRef.rolling.ref = RollingFile
rootLogger.appenderRef.out.ref = out
